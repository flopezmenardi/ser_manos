// Mocks generated by Mockito 5.4.6 from annotations
// in ser_manos/test/mocks/volunteering_view_tracker_mock.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:mockito/mockito.dart' as _i1;
import 'package:ser_manos/core/infrastructure/volunteering_view_tracker.dart'
    as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [ViewTracker].
///
/// See the documentation for Mockito's code generation for more information.
class MockViewTracker extends _i1.Mock implements _i2.ViewTracker {
  MockViewTracker() {
    _i1.throwOnMissingStub(this);
  }

  @override
  int get viewsCount =>
      (super.noSuchMethod(Invocation.getter(#viewsCount), returnValue: 0)
          as int);

  @override
  void registerView(String? volunteeringId) => super.noSuchMethod(
    Invocation.method(#registerView, [volunteeringId]),
    returnValueForMissingStub: null,
  );

  @override
  void reset() => super.noSuchMethod(
    Invocation.method(#reset, []),
    returnValueForMissingStub: null,
  );
}
